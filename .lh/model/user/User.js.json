{
    "sourceFile": "model/user/User.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1692718810883,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692718820351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n       type: String,\n     },\n     role:{\n       type:String,\n-      \n+      default: \"Blogger\"\n     }\n     posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n     comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n   },\n"
                },
                {
                    "date": 1692718826324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+const mongoose = require(\"mongoose\");\n+\n+//Schema\n+const userSchema = new mongoose.Schema(\n+  {\n+    fullname: {\n+      type: String,\n+      required: true,\n+    },\n+    email: {\n+      type: String,\n+      required: true,\n+    },\n+    password: {\n+      type: String,\n+      required: true,\n+    },\n+    profileImage: {\n+      type: String,\n+    },\n+    coverImage: {\n+      type: String,\n+    },\n+    role:{\n+      type:String,\n+      default: \"Blogger\",\n+    },\n+    posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n+    comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n+  },\n+  {\n+    timestamps: true,\n+  }\n+);\n+\n+//compile the schema to form a model\n+const User = mongoose.model(\"User\", userSchema);\n+\n+module.exports = User;\n"
                },
                {
                    "date": 1692718835457,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+const mongoose = require(\"mongoose\");\n+\n+//Schema\n+const userSchema = new mongoose.Schema(\n+  {\n+    fullname: {\n+      type: String,\n+      required: true,\n+    },\n+    email: {\n+      type: String,\n+      required: true,\n+    },\n+    password: {\n+      type: String,\n+      required: true,\n+    },\n+    profileImage: {\n+      type: String,\n+    },\n+    coverImage: {\n+      type: String,\n+    },\n+    role:{\n+      type:String,\n+      default: \"Blogger\",\n+    },\n+    bio:{\n+      \n+    }\n+    posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n+    comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n+  },\n+  {\n+    timestamps: true,\n+  }\n+);\n+\n+//compile the schema to form a model\n+const User = mongoose.model(\"User\", userSchema);\n+\n+module.exports = User;\n"
                },
                {
                    "date": 1692718843913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+const mongoose = require(\"mongoose\");\n+\n+//Schema\n+const userSchema = new mongoose.Schema(\n+  {\n+    fullname: {\n+      type: String,\n+      required: true,\n+    },\n+    email: {\n+      type: String,\n+      required: true,\n+    },\n+    password: {\n+      type: String,\n+      required: true,\n+    },\n+    profileImage: {\n+      type: String,\n+    },\n+    coverImage: {\n+      type: String,\n+    },\n+    role: {\n+      type: String,\n+      default: \"Blogger\",\n+    },\n+    bio: {\n+      type: String,\n+      \n+    },\n+    posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n+    comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n+  },\n+  {\n+    timestamps: true,\n+  }\n+);\n+\n+//compile the schema to form a model\n+const User = mongoose.model(\"User\", userSchema);\n+\n+module.exports = User;\n"
                },
                {
                    "date": 1692718850728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,10 @@\n       default: \"Blogger\",\n     },\n     bio: {\n       type: String,\n-      \n+      default:\n+        \"\"\n     },\n     posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n     comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n   },\n"
                },
                {
                    "date": 1692718863346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     },\n     bio: {\n       type: String,\n       default:\n-        \"\"\n+        \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Nostrum adipisci eligendi nobis itaque ex? Veniam tempore itaque cumque fugiat iusto voluptatibus\"\n     },\n     posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n     comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n   },\n@@ -41,124 +41,4 @@\n //compile the schema to form a model\n const User = mongoose.model(\"User\", userSchema);\n \n module.exports = User;\n-const mongoose = require(\"mongoose\");\n-\n-//Schema\n-const userSchema = new mongoose.Schema(\n-  {\n-    fullname: {\n-      type: String,\n-      required: true,\n-    },\n-    email: {\n-      type: String,\n-      required: true,\n-    },\n-    password: {\n-      type: String,\n-      required: true,\n-    },\n-    profileImage: {\n-      type: String,\n-    },\n-    coverImage: {\n-      type: String,\n-    },\n-    role:{\n-      type:String,\n-      default: \"Blogger\",\n-    },\n-    bio:{\n-      \n-    }\n-    posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n-    comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n-  },\n-  {\n-    timestamps: true,\n-  }\n-);\n-\n-//compile the schema to form a model\n-const User = mongoose.model(\"User\", userSchema);\n-\n-module.exports = User;\n-const mongoose = require(\"mongoose\");\n-\n-//Schema\n-const userSchema = new mongoose.Schema(\n-  {\n-    fullname: {\n-      type: String,\n-      required: true,\n-    },\n-    email: {\n-      type: String,\n-      required: true,\n-    },\n-    password: {\n-      type: String,\n-      required: true,\n-    },\n-    profileImage: {\n-      type: String,\n-    },\n-    coverImage: {\n-      type: String,\n-    },\n-    role:{\n-      type:String,\n-      default: \"Blogger\",\n-    },\n-    posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n-    comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n-  },\n-  {\n-    timestamps: true,\n-  }\n-);\n-\n-//compile the schema to form a model\n-const User = mongoose.model(\"User\", userSchema);\n-\n-module.exports = User;\n-const mongoose = require(\"mongoose\");\n-\n-//Schema\n-const userSchema = new mongoose.Schema(\n-  {\n-    fullname: {\n-      type: String,\n-      required: true,\n-    },\n-    email: {\n-      type: String,\n-      required: true,\n-    },\n-    password: {\n-      type: String,\n-      required: true,\n-    },\n-    profileImage: {\n-      type: String,\n-    },\n-    coverImage: {\n-      type: String,\n-    },\n-    role:{\n-      type:String,\n-      default: \"Blogger\"\n-    }\n-    posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n-    comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n-  },\n-  {\n-    timestamps: true,\n-  }\n-);\n-\n-//compile the schema to form a model\n-const User = mongoose.model(\"User\", userSchema);\n-\n-module.exports = User;\n"
                }
            ],
            "date": 1692718810883,
            "name": "Commit-0",
            "content": "const mongoose = require(\"mongoose\");\n\n//Schema\nconst userSchema = new mongoose.Schema(\n  {\n    fullname: {\n      type: String,\n      required: true,\n    },\n    email: {\n      type: String,\n      required: true,\n    },\n    password: {\n      type: String,\n      required: true,\n    },\n    profileImage: {\n      type: String,\n    },\n    coverImage: {\n      type: String,\n    },\n    role:{\n      type:String,\n      \n    }\n    posts: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Post\" }],\n    comments: [{ type: mongoose.Schema.Types.ObjectId, ref: \"Comment\" }],\n  },\n  {\n    timestamps: true,\n  }\n);\n\n//compile the schema to form a model\nconst User = mongoose.model(\"User\", userSchema);\n\nmodule.exports = User;\n"
        }
    ]
}