{
    "sourceFile": "server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1692025051784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692025062953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+require(\"dotenv\").config();\n+const express = require(\"express\");\n+const session = require(\"express-session\");\n+const MongoStore = require(\"connect-mongo\");\n+const globalErrHandler = require(\"./middlewares/globalHandler\");\n+const commentRoutes = require(\"./routes/comments/comment\");\n+const postRoutes = require(\"./routes/posts/posts\");\n+const userRoutes = require(\"./routes/users/users\");\n+\n+require(\"./config/dbConnect\");\n+\n+const app = express();\n+\n+//middlewares\n+//-------\n+\n+app.set(\"view engine\", ejs)\n+\n+app.use(express.json()); //pass incoming data\n+//session config\n+app.use(\n+  session({\n+    secret: process.env.SESSION_KEY,\n+    resave: false,\n+    saveUninitialized: true,\n+    store: new MongoStore({\n+      mongoUrl: process.env.MONGO_URL,\n+      ttl: 24 * 60 * 60, //1 day\n+    }),\n+  })\n+);\n+//users route\n+app.use(\"/api/v1/users\", userRoutes);\n+\n+//posts route\n+app.use(\"/api/v1/posts\", postRoutes);\n+\n+//comments\n+app.use(\"/api/v1/comments\", commentRoutes);\n+\n+//Error handler middlewares\n+app.use(globalErrHandler);\n+//listen server\n+const PORT = process.env.PORT || 9000;\n+app.listen(PORT, console.log(`Server is running on PORT ${PORT}`));\n"
                },
                {
                    "date": 1692025074626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+require(\"dotenv\").config();\n+const express = require(\"express\");\n+const session = require(\"express-session\");\n+const MongoStore = require(\"connect-mongo\");\n+const globalErrHandler = require(\"./middlewares/globalHandler\");\n+const commentRoutes = require(\"./routes/comments/comment\");\n+const postRoutes = require(\"./routes/posts/posts\");\n+const userRoutes = require(\"./routes/users/users\");\n+\n+require(\"./config/dbConnect\");\n+\n+const app = express();\n+\n+//middlewares\n+//-------\n+\n+app.set(\"view engine\", \"ejs\");\n+\n+app.use(express.json()); //pass incoming data\n+//session config\n+app.use(\n+  session({\n+    secret: process.env.SESSION_KEY,\n+    resave: false,\n+    saveUninitialized: true,\n+    store: new MongoStore({\n+      mongoUrl: process.env.MONGO_URL,\n+      ttl: 24 * 60 * 60, //1 day\n+    }),\n+  })\n+);\n+//users route\n+app.use(\"/api/v1/users\", userRoutes);\n+\n+//posts route\n+app.use(\"/api/v1/posts\", postRoutes);\n+\n+//comments\n+app.use(\"/api/v1/comments\", commentRoutes);\n+\n+//Error handler middlewares\n+app.use(globalErrHandler);\n+//listen server\n+const PORT = process.env.PORT || 9000;\n+app.listen(PORT, console.log(`Server is running on PORT ${PORT}`));\n"
                },
                {
                    "date": 1692025083326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+require(\"dotenv\").config();\n+const express = require(\"express\");\n+const session = require(\"express-session\");\n+const MongoStore = require(\"connect-mongo\");\n+const globalErrHandler = require(\"./middlewares/globalHandler\");\n+const commentRoutes = require(\"./routes/comments/comment\");\n+const postRoutes = require(\"./routes/posts/posts\");\n+const userRoutes = require(\"./routes/users/users\");\n+\n+require(\"./config/dbConnect\");\n+\n+const app = express();\n+\n+//middlewares\n+//-------\n+\n+app.set(\"view engine\", \"ejs\");\n+//serve stati\n+\n+app.use(express.json()); //pass incoming data\n+//session config\n+app.use(\n+  session({\n+    secret: process.env.SESSION_KEY,\n+    resave: false,\n+    saveUninitialized: true,\n+    store: new MongoStore({\n+      mongoUrl: process.env.MONGO_URL,\n+      ttl: 24 * 60 * 60, //1 day\n+    }),\n+  })\n+);\n+//users route\n+app.use(\"/api/v1/users\", userRoutes);\n+\n+//posts route\n+app.use(\"/api/v1/posts\", postRoutes);\n+\n+//comments\n+app.use(\"/api/v1/comments\", commentRoutes);\n+\n+//Error handler middlewares\n+app.use(globalErrHandler);\n+//listen server\n+const PORT = process.env.PORT || 9000;\n+app.listen(PORT, console.log(`Server is running on PORT ${PORT}`));\n"
                },
                {
                    "date": 1692025094618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+require(\"dotenv\").config();\n+const express = require(\"express\");\n+const session = require(\"express-session\");\n+const MongoStore = require(\"connect-mongo\");\n+const globalErrHandler = require(\"./middlewares/globalHandler\");\n+const commentRoutes = require(\"./routes/comments/comment\");\n+const postRoutes = require(\"./routes/posts/posts\");\n+const userRoutes = require(\"./routes/users/users\");\n+\n+require(\"./config/dbConnect\");\n+\n+const app = express();\n+\n+//middlewares\n+//-------\n+\n+app.set(\"view engine\", \"ejs\");\n+//serve static files\n+app.use(express.static)\n+\n+app.use(express.json()); //pass incoming data\n+//session config\n+app.use(\n+  session({\n+    secret: process.env.SESSION_KEY,\n+    resave: false,\n+    saveUninitialized: true,\n+    store: new MongoStore({\n+      mongoUrl: process.env.MONGO_URL,\n+      ttl: 24 * 60 * 60, //1 day\n+    }),\n+  })\n+);\n+//users route\n+app.use(\"/api/v1/users\", userRoutes);\n+\n+//posts route\n+app.use(\"/api/v1/posts\", postRoutes);\n+\n+//comments\n+app.use(\"/api/v1/comments\", commentRoutes);\n+\n+//Error handler middlewares\n+app.use(globalErrHandler);\n+//listen server\n+const PORT = process.env.PORT || 9000;\n+app.listen(PORT, console.log(`Server is running on PORT ${PORT}`));\n"
                },
                {
                    "date": 1692025103713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+require(\"dotenv\").config();\n+const express = require(\"express\");\n+const session = require(\"express-session\");\n+const MongoStore = require(\"connect-mongo\");\n+const globalErrHandler = require(\"./middlewares/globalHandler\");\n+const commentRoutes = require(\"./routes/comments/comment\");\n+const postRoutes = require(\"./routes/posts/posts\");\n+const userRoutes = require(\"./routes/users/users\");\n+\n+require(\"./config/dbConnect\");\n+\n+const app = express();\n+\n+//middlewares\n+//-------\n+\n+app.set(\"view engine\", \"ejs\");\n+//serve static files\n+app.use(express.static());\n+\n+app.use(express.json()); //pass incoming data\n+//session config\n+app.use(\n+  session({\n+    secret: process.env.SESSION_KEY,\n+    resave: false,\n+    saveUninitialized: true,\n+    store: new MongoStore({\n+      mongoUrl: process.env.MONGO_URL,\n+      ttl: 24 * 60 * 60, //1 day\n+    }),\n+  })\n+);\n+//users route\n+app.use(\"/api/v1/users\", userRoutes);\n+\n+//posts route\n+app.use(\"/api/v1/posts\", postRoutes);\n+\n+//comments\n+app.use(\"/api/v1/comments\", commentRoutes);\n+\n+//Error handler middlewares\n+app.use(globalErrHandler);\n+//listen server\n+const PORT = process.env.PORT || 9000;\n+app.listen(PORT, console.log(`Server is running on PORT ${PORT}`));\n"
                },
                {
                    "date": 1692025118447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+require(\"dotenv\").config();\n+const express = require(\"express\");\n+const session = require(\"express-session\");\n+const MongoStore = require(\"connect-mongo\");\n+const globalErrHandler = require(\"./middlewares/globalHandler\");\n+const commentRoutes = require(\"./routes/comments/comment\");\n+const postRoutes = require(\"./routes/posts/posts\");\n+const userRoutes = require(\"./routes/users/users\");\n+\n+require(\"./config/dbConnect\");\n+\n+const app = express();\n+\n+//middlewares\n+//-------\n+\n+app.set(\"view engine\", \"ejs\");\n+//serve static files\n+app.use(express.static(__dirname));\n+\n+app.use(express.json()); //pass incoming data\n+//session config\n+app.use(\n+  session({\n+    secret: process.env.SESSION_KEY,\n+    resave: false,\n+    saveUninitialized: true,\n+    store: new MongoStore({\n+      mongoUrl: process.env.MONGO_URL,\n+      ttl: 24 * 60 * 60, //1 day\n+    }),\n+  })\n+);\n+//users route\n+app.use(\"/api/v1/users\", userRoutes);\n+\n+//posts route\n+app.use(\"/api/v1/posts\", postRoutes);\n+\n+//comments\n+app.use(\"/api/v1/comments\", commentRoutes);\n+\n+//Error handler middlewares\n+app.use(globalErrHandler);\n+//listen server\n+const PORT = process.env.PORT || 9000;\n+app.listen(PORT, console.log(`Server is running on PORT ${PORT}`));\n"
                },
                {
                    "date": 1692025124800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n //-------\n \n app.set(\"view engine\", \"ejs\");\n //serve static files\n-app.use(express.static(__dirname, p));\n+app.use(express.static(__dirname, +));\n \n app.use(express.json()); //pass incoming data\n //session config\n app.use(\n"
                },
                {
                    "date": 1692025241410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+require(\"dotenv\").config();\n+const express = require(\"express\");\n+const session = require(\"express-session\");\n+const MongoStore = require(\"connect-mongo\");\n+const globalErrHandler = require(\"./middlewares/globalHandler\");\n+const commentRoutes = require(\"./routes/comments/comment\");\n+const postRoutes = require(\"./routes/posts/posts\");\n+const userRoutes = require(\"./routes/users/users\");\n+\n+require(\"./config/dbConnect\");\n+\n+const app = express();\n+\n+//middlewares\n+//-------\n+\n+app.set(\"view engine\", \"ejs\");\n+//serve static files\n+app.use(express.static(__dirname, +\"/public\"));\n+\n+app.use(express.json()); //pass incoming data\n+//session config\n+app.use(\n+  session({\n+    secret: process.env.SESSION_KEY,\n+    resave: false,\n+    saveUninitialized: true,\n+    store: new MongoStore({\n+      mongoUrl: process.env.MONGO_URL,\n+      ttl: 24 * 60 * 60, //1 day\n+    }),\n+  })\n+);\n+//users route\n+app.use(\"/api/v1/users\", userRoutes);\n+\n+//posts route\n+app.use(\"/api/v1/posts\", postRoutes);\n+\n+//comments\n+app.use(\"/api/v1/comments\", commentRoutes);\n+\n+//Error handler middlewares\n+app.use(globalErrHandler);\n+//listen server\n+const PORT = process.env.PORT || 9000;\n+app.listen(PORT, console.log(`Server is running on PORT ${PORT}`));\n"
                }
            ],
            "date": 1692025051784,
            "name": "Commit-0",
            "content": "require(\"dotenv\").config();\nconst express = require(\"express\");\nconst session = require(\"express-session\");\nconst MongoStore = require(\"connect-mongo\");\nconst globalErrHandler = require(\"./middlewares/globalHandler\");\nconst commentRoutes = require(\"./routes/comments/comment\");\nconst postRoutes = require(\"./routes/posts/posts\");\nconst userRoutes = require(\"./routes/users/users\");\n\nrequire(\"./config/dbConnect\");\n\nconst app = express();\n\n//middlewares\n//-------\n\n\napp.use(express.json()); //pass incoming data\n//session config\napp.use(\n  session({\n    secret: process.env.SESSION_KEY,\n    resave: false,\n    saveUninitialized: true,\n    store: new MongoStore({\n      mongoUrl: process.env.MONGO_URL,\n      ttl: 24 * 60 * 60, //1 day\n    }),\n  })\n);\n//users route\napp.use(\"/api/v1/users\", userRoutes);\n\n//posts route\napp.use(\"/api/v1/posts\", postRoutes);\n\n//comments\napp.use(\"/api/v1/comments\", commentRoutes);\n\n//Error handler middlewares\napp.use(globalErrHandler);\n//listen server\nconst PORT = process.env.PORT || 9000;\napp.listen(PORT, console.log(`Server is running on PORT ${PORT}`));\n"
        }
    ]
}